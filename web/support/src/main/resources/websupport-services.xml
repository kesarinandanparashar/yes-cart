<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Igor Azarnyi, Denys Pavlov
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/cache
                           http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:component-scan base-package="org.yes.cart"/>

    <cache:annotation-driven />

    <aop:aspectj-autoproxy/>

    <import resource="classpath*:core-config.xml"/>
    <import resource="classpath*:core-services.xml"/>

    <bean id="productReindexer" class="org.yes.cart.domain.entityindexer.impl.ProductIndexerImpl">
        <constructor-arg index="0" ref="productDao"/>
        <constructor-arg index="1" value="128"/>
        <constructor-arg index="2" value="4"/>
    </bean>

    <!-- ################################## Category , Product and Sku image services begin ######################## -->

    <bean id="categoryImageAttributeStrategy"
          class="org.yes.cart.web.support.service.impl.CategoryImageRetrieveStrategyAttributeImpl">
        <constructor-arg index="0" value="CATEGORY_IMAGE"/>
    </bean>

    <bean id="categoryImageRandomProduct"
          class="org.yes.cart.web.support.service.impl.CategoryImageRetrieveStrategyRandomProductImpl">
        <constructor-arg index="0" ref="productService"/>
        <constructor-arg index="1" value="IMAGE0"/>
    </bean>

    <bean id="categoryImageService" class="org.yes.cart.web.support.service.impl.CategoryImageServiceImpl">
        <constructor-arg index="0">
            <map>
                <entry key="ATTRIBUTE" value-ref="categoryImageAttributeStrategy"/>
                <entry key="RANDOM_PRODUCT" value-ref="categoryImageRandomProduct"/>
            </map>
        </constructor-arg>
        <constructor-arg index="1" value="ATTRIBUTE"/>
        <constructor-arg index="2" ref="cacheManager"/>
    </bean>

    <bean id="productImageService" class="org.yes.cart.web.support.service.impl.ProductImageServiceImpl">
        <constructor-arg index="0" ref="cacheManager"/>
    </bean>

    <bean id="brandImageService" class="org.yes.cart.web.support.service.impl.BrandImageServiceImpl">
        <constructor-arg index="0" ref="cacheManager"/>
    </bean>

    <bean id="shopImageService" class="org.yes.cart.web.support.service.impl.ShopImageServiceImpl">
        <constructor-arg index="0" ref="cacheManager"/>
    </bean>


    <!-- ############################ Category , Product and Sku image services end ############################### -->

    <!-- ############################ Facades for web start ####################################################### -->

    <bean id="addressBookFacade" class="org.yes.cart.web.support.service.impl.AddressBookFacadeImpl">
        <constructor-arg index="0" ref="customerService"/>
        <constructor-arg index="1" ref="addressService"/>
        <constructor-arg index="2" ref="countryService"/>
        <constructor-arg index="3" ref="stateService"/>
        <constructor-arg index="4" ref="shopService"/>
    </bean>

    <bean id="customerServiceFacade" class="org.yes.cart.web.support.service.impl.CustomerServiceFacadeImpl">
        <constructor-arg index="0" ref="customerService"/>
        <constructor-arg index="1" ref="customerWishListService"/>
        <constructor-arg index="2" ref="attributeService"/>
        <constructor-arg index="3" ref="passPhraseGenerator"/>
    </bean>

    <bean id="promotionFacade" class="org.yes.cart.web.support.service.impl.PromotionFacadeImpl">
        <constructor-arg index="0" ref="promotionService"/>
    </bean>

    <bean id="shippingServiceFacade" class="org.yes.cart.web.support.service.impl.ShippingServiceFacadeImpl">
        <constructor-arg index="0" ref="carrierService"/>
        <constructor-arg index="1" ref="carrierSlaService"/>
    </bean>

    <bean id="checkoutServiceFacade" class="org.yes.cart.web.support.service.impl.CheckoutServiceFacadeImpl">
        <constructor-arg index="0" ref="customerOrderService"/>
        <constructor-arg index="1" ref="amountCalculationStrategy"/>
        <constructor-arg index="2" ref="customerOrderPaymentService"/>
        <constructor-arg index="3" ref="carrierSlaService"/>
        <constructor-arg index="4" ref="paymentProcessorFactory"/>
        <constructor-arg index="5" ref="paymentModulesManager"/>
    </bean>

    <bean id="categoryServiceFacade"  class="org.yes.cart.web.support.service.impl.CategoryServiceFacadeImpl">
        <constructor-arg index="0" ref="categoryService"/>
        <constructor-arg index="1" ref="shopService"/>
    </bean>

    <bean id="contentServiceFacade"  class="org.yes.cart.web.support.service.impl.ContentServiceFacadeImpl">
        <constructor-arg index="0" ref="contentService"/>
        <constructor-arg index="1" ref="shopService"/>
    </bean>

    <bean id="productServiceFacade" class="org.yes.cart.web.support.service.impl.ProductServiceFacadeImpl">
        <constructor-arg index="0" ref="productService"/>
        <constructor-arg index="1" ref="productSkuService"/>
        <constructor-arg index="2" ref="productAssociationService"/>
        <constructor-arg index="3" ref="luceneQueryFactory"/>
        <constructor-arg index="4" ref="productAvailabilityStrategy"/>
        <constructor-arg index="5" ref="productQuantityStrategy"/>
        <constructor-arg index="6" ref="priceService"/>
        <constructor-arg index="7" ref="categoryServiceFacade"/>
    </bean>

    <!-- ############################ Facades for web end ####################################################### -->


    <!-- #################################  aspects configurations begin ######################################-->

    <bean id="aspectExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"/>

    <bean id="customerRegistrationAspect" class="org.yes.cart.web.aspect.RegistrationAspect">
        <constructor-arg index="0" ref="aspectExecutor"/>
        <constructor-arg index="1" ref="passPhraseGenerator"/>
        <constructor-arg index="2" ref="passwordHashHelper"/>
        <constructor-arg index="3" ref="mailService"/>
        <constructor-arg index="4" ref="mailComposer"/>
        <constructor-arg index="5" ref="themeService"/>

    </bean>

    <bean id="paymentNotificationAspect" class="org.yes.cart.service.domain.aspect.impl.PaymentAspect">
        <constructor-arg index="0" ref="aspectExecutor"/>
        <constructor-arg index="1" ref="productService"/>
        <constructor-arg index="2" type="org.yes.cart.service.domain.MailService" ref="mailService"/>
        <constructor-arg index="3" type="org.yes.cart.service.mail.MailComposer" ref="mailComposer"/>
        <constructor-arg index="4" type="org.yes.cart.service.domain.CustomerService" ref="customerService"/>
        <constructor-arg index="5" type="org.yes.cart.service.domain.ShopService" ref="shopService"/>
        <constructor-arg index="6" type="org.yes.cart.service.theme.ThemeService" ref="themeService"/>
        <constructor-arg index="7" type="org.yes.cart.service.payment.PaymentModulesManager" ref="paymentModulesManager"/>
        <property name="authoriseShopperTemplates">
            <map>
                <entry key="Ok" value="payment"/>
            </map>
        </property>
        <property name="authoriseAdminTemplates">
            <map>
                <entry key="Ok" value="adm-payment"/>
                <entry key="Processing" value="adm-payment"/>
                <entry key="Failed" value="adm-payment-failed"/>
                <entry key="Manual processing required" value="adm-payment-failed"/>
            </map>
        </property>
        <property name="cancelShopperTemplates">
            <map/>
        </property>
        <property name="cancelAdminTemplates">
            <map>
                <entry key="Ok" value="adm-refund"/>
                <entry key="Processing" value="adm-refund"/>
                <entry key="Failed" value="adm-refund-failed"/>
                <entry key="Manual processing required" value="adm-refund-failed"/>
            </map>
        </property>
        <property name="shipmentShopperTemplates">
            <map>
                <entry key="Ok" value="shipment-complete"/>
            </map>
        </property>
        <property name="shipmentAdminTemplates">
            <map>
                <entry key="Ok" value="adm-payment-shipped"/>
                <entry key="Processing" value="adm-payment-shipped"/>
                <entry key="Failed" value="adm-payment-shipped-failed"/>
                <entry key="Manual processing required" value="adm-payment-shipped-failed"/>
            </map>
        </property>
    </bean>

    <bean id="orderStateChangeAspect" class="org.yes.cart.service.domain.aspect.impl.OrderStateChangeListenerAspect">
        <constructor-arg index="0" ref="aspectExecutor"/>
        <constructor-arg index="1" type="org.yes.cart.service.domain.MailService" ref="mailService"/>
        <constructor-arg index="2" type="org.yes.cart.service.mail.MailComposer" ref="mailComposer"/>
        <constructor-arg index="3" type="org.yes.cart.service.domain.CustomerService" ref="customerService"/>
        <constructor-arg index="4" type="org.yes.cart.service.domain.CustomerOrderService" ref="customerOrderService"/>
        <constructor-arg index="5" type="org.yes.cart.service.domain.ShopService" ref="shopService"/>
        <constructor-arg index="6" type="org.yes.cart.service.theme.ThemeService" ref="themeService"/>
        <constructor-arg index="7" type="org.yes.cart.service.domain.ProductSkuService" ref="productSkuService"/>
        <constructor-arg index="8">
            <map>
                <entry key="evt.pending-os.waiting" value="order-new"/>
                <entry key="evt.pending-os.waiting.payment" value="order-new"/>
                <entry key="evt.pending-os.in.progress" value="order-new"/>

                <entry key="evt.new.order.cancel.refund-os.cancelled" value="order-canceled"/>
                <entry key="evt.new.order.cancel.refund-os.cancelled.waiting.payment" value="order-canceled"/>

                <entry key="evt.payment.confirmed-os.in.progress" value="order-confirmed"/>

                <entry key="evt.packing.complete-os.in.progress-ds.shipment.ready" value="order-delivery-readytoshipping"/>
                <entry key="evt.packing.complete-os.partially.shipped-ds.shipment.ready" value="order-delivery-readytoshipping"/>
                <entry key="evt.release.to.shipment-os.in.progress-ds.shipment.ready.waiting.payment" value="order-delivery-readytoshipping"/>
                <entry key="evt.release.to.shipment-os.partially.shipped-ds.shipment.ready.waiting.payment" value="order-delivery-readytoshipping"/>

                <entry key="evt.release.to.shipment-os.in.progress-ds.shipment.inprogress" value="order-delivery-shipped"/>
                <entry key="evt.release.to.shipment-os.partially.shipped-ds.shipment.inprogress" value="order-delivery-shipped"/>
                <entry key="evt.release.to.shipment-os.in.progress-ds.shipment.inprogress.waiting.payment" value="order-delivery-shipped"/>
                <entry key="evt.release.to.shipment-os.partially.shipped-ds.shipment.inprogress.waiting.payment" value="order-delivery-shipped"/>

                <entry key="evt.shipment.complete-os.partially.shipped-ds.shipped" value="order-shipping-completed"/>
                <entry key="evt.shipment.complete-os.completed-ds.shipped" value="order-shipping-completed"/>

                <entry key="evt.order.cancel-os.cancelled" value="order-canceled"/>
                <entry key="evt.order.cancel.refund-os.cancelled" value="order-canceled"/>
                <entry key="evt.order.cancel.refund-os.returned" value="order-returned"/>
            </map>
        </constructor-arg>
        <constructor-arg index="9">
            <map>
                <entry key="evt.pending-os.waiting" value="adm-order-wait-confirmation"/>
                <entry key="evt.pending-os.waiting.payment" value="adm-order-new"/>
                <entry key="evt.pending-os.in.progress" value="adm-order-new"/>

                <entry key="evt.new.order.cancel.refund-os.cancelled" value="adm-order-canceled"/>
                <entry key="evt.new.order.cancel.refund-os.cancelled.waiting.payment" value="adm-order-canceled"/>

                <entry key="evt.payment.confirmed-os.in.progress" value="adm-order-confirmed"/>
                <entry key="evt.payment.processed-os.in.progress" value="adm-order-payment-confirmed"/>

                <entry key="evt.process.allocation-os.in.progress-ds.inventory.allocated" value="adm-order-delivery-allocated"/>
                <entry key="evt.process.allocation-os.partially.shipped-ds.inventory.allocated" value="adm-order-delivery-allocated"/>
                <entry key="evt.delivery.allowed.quantity-os.in.progress-ds.inventory.allocated" value="adm-order-delivery-allocated"/>
                <entry key="evt.delivery.allowed.quantity-os.partially.shipped-ds.inventory.allocated" value="adm-order-delivery-allocated"/>

                <entry key="evt.release.to.pack-os.in.progress-ds.packing" value="adm-order-delivery-packing"/>
                <entry key="evt.release.to.pack-os.partially.shipped-ds.packing" value="adm-order-delivery-packing"/>

                <entry key="evt.packing.complete-os.in.progress-ds.shipment.ready" value="adm-order-delivery-ready"/>
                <entry key="evt.packing.complete-os.partially.shipped-ds.shipment.ready" value="adm-order-delivery-ready"/>

                <entry key="evt.release.to.shipment-os.in.progress-ds.shipment.ready.waiting.payment" value="adm-order-delivery-ready-wait"/>
                <entry key="evt.release.to.shipment-os.partially.shipped-ds.shipment.ready.waiting.payment" value="adm-order-delivery-ready-wait"/>

                <entry key="evt.release.to.shipment-os.in.progress-ds.shipment.inprogress" value="adm-order-delivery-inprogress"/>
                <entry key="evt.release.to.shipment-os.partially.shipped-ds.shipment.inprogress" value="adm-order-delivery-inprogress"/>

                <entry key="evt.release.to.shipment-os.in.progress-ds.shipment.inprogress.waiting.payment" value="adm-order-delivery-inprogress-wait"/>
                <entry key="evt.release.to.shipment-os.partially.shipped-ds.shipment.inprogress.waiting.payment" value="adm-order-delivery-inprogress-wait"/>

                <entry key="evt.shipment.complete-os.partially.shipped-ds.shipped" value="adm-order-shipping-completed"/>
                <entry key="evt.shipment.complete-os.completed-ds.shipped" value="adm-order-shipping-completed"/>

                <entry key="evt.order.cancel-os.cancelled" value="adm-order-canceled"/>
                <entry key="evt.order.cancel.refund-os.cancelled" value="adm-order-canceled"/>
                <entry key="evt.order.cancel.refund-os.returned" value="adm-order-returned"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- #################################  aspects configurations end ######################################-->




</beans>